{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"JupyterLab Extension for Onyx","text":""},{"location":"#introduction","title":"Introduction","text":"<p>This is the documentation for Onyx-extension, an extension to JupyterLab that provides:</p> <ul> <li>: Access to the Onyx GUI, a graphical user interface for interacting with the Onyx database.</li> <li>: An S3 download utility.</li> <li>: Links to the CLIMB-TRE documentation.</li> </ul> <p>Onyx is being developed as part of the CLIMB-TRE project.</p> <p></p>"},{"location":"#contents","title":"Contents","text":"<p>Installation Learn how to install the extension, or build it manually for development.</p>"},{"location":"#graphical-user-interface","title":"Graphical User Interface","text":"<p>Quick Start Learn how to launch and navigate the Onyx interface.</p> <p>Querying Data Learn how to filter, summarise and export records and analyses.</p> <p>Profiles &amp; Sites Learn how to view your profile, project permissions, latest activity, and other users from your site.</p>"},{"location":"installation/","title":"Installation","text":"<p>Guidance for installing the Onyx JupyterLab extension, or building it manually for development.</p> <p>Usage within CLIMB JupyterLab Servers</p> <p>If you are running a CLIMB JupyterLab server, you do not need to install the extension, as it comes pre-configured in your environment.</p> <p>If you cannot see the most up-to-date version of the Onyx JupyterLab extension, this is because you will have previously installed your own version manually.</p> <p>To revert your Onyx JupyterLab extension to the managed up-to-date version, navigate to your terminal and run:</p> <pre><code>$ pip uninstall climb-onyx-gui\n</code></pre> <p>And restart your JupyterLab server.</p>"},{"location":"installation/#install-from-pypi","title":"Install from PyPI","text":"<pre><code>$ pip install climb-onyx-gui\n</code></pre> <p>This installs the latest version of the extension from PyPI.</p>"},{"location":"installation/#build-from-source","title":"Build from source","text":"<p>Clone the source code from GitHub:</p> <pre><code>$ git clone https://github.com/CLIMB-TRE/onyx-extension.git\n</code></pre> <p>Ensure you have Miniconda (or an alternative conda installer) available. Installation instructions for Conda can be found here.</p> <p>Create and activate a conda environment with JupyterLab and NodeJS:</p> <pre><code>$ conda create -n jupyterlab-ext -c conda-forge jupyterlab=4 nodejs=20\n$ conda activate jupyterlab-ext\n</code></pre> <p>Navigate to the extension directory, and install the extension dependencies with the JupyterLab package manager <code>jlpm</code>:</p> <pre><code>$ cd onyx-extension/\n$ jlpm install\n</code></pre> <p>Build and install the extension:</p> <pre><code>$ jlpm run build\n$ pip install -ve .\n</code></pre> <p>You can now launch JupyterLab with:</p> <pre><code>$ jupyter lab\n</code></pre> <p>And the Onyx extension will be ready on the launcher.</p>"},{"location":"installation/#developing-the-extension","title":"Developing the Extension","text":"<p>If you wish to develop on the extension, ensure you have followed the above steps to build, install and run the extension.</p> <p>From there, you can simply modify the extension code and dependencies, and reinstall/rebuild the extension by executing:</p> <pre><code>$ jlpm install &amp;&amp; jlpm run build &amp;&amp; pip install -ve .\n</code></pre>"},{"location":"gui/documentation/graphing-data/","title":"Graphing Data","text":""},{"location":"gui/documentation/inspecting-data/","title":"Inspecting Data","text":""},{"location":"gui/documentation/profiles-and-sites/","title":"Profiles &amp; Sites","text":""},{"location":"gui/documentation/profiles-and-sites/#profile-page","title":"Profile Page","text":"<p>To view more about your profile, click on the <code>User: &lt;your-username&gt;</code> header: </p> <p></p> <p>This will open the profile page, where you can see:</p> <ul> <li><code>Details</code>: Key details about your account.</li> <li><code>Project Permissions</code>: Projects that you have access to, and actions you can carry out on that project.</li> <li><code>Recent Activity</code>: Your most recent 50 API requests, with status/errors/execution time information.</li> </ul> <p></p>"},{"location":"gui/documentation/profiles-and-sites/#site-page","title":"Site Page","text":"<p>To view more about your site, click on the <code>Site: &lt;your-site&gt;</code> header:</p> <p></p> <p>This will open the site page, where you can see:</p> <ul> <li><code>Site Users</code>: Users from your site who have access to at least one of the same projects.</li> </ul> <p></p>"},{"location":"gui/documentation/querying-data/","title":"Querying Data","text":"<p>Records and analyses share the same interface and functionality for browsing.</p> <p></p> <p>This includes:</p> <ul> <li>A <code>Search</code> bar, for basic substring matching against visible fields.</li> <li>The <code>Filter</code> panel, for adding filters against visible, non-visible and nested fields.</li> <li>The <code>Summarise</code> panel, for computing the number of items per summary group, as specified by the selected fields.</li> <li>The  <code>Copy CLI Command</code>, for copying the current filters and summary fields into a command for the Onyx command-line interface.</li> <li>The results panel, <code>Records</code> or <code>Analyses</code>, that displays results matching the current query. Here, results can be re-ordered, as well as exported via the table <code>Options</code> dropdown. The <code>Edit Columns</code> button can also be used to change the returned columns.</li> </ul> <p>We will now learn how to filter, aggregate and export data using this interface.</p>"},{"location":"gui/documentation/querying-data/#filtering-data","title":"Filtering Data","text":"<p>Info</p> <p><code>synthSCAPE</code> is an Onyx project within CLIMB-TRE for hosting simulated metagenomic data as part of mSCAPE, a world-leading initiative trialling the use of metagenomic data for public health surveillance.</p> <p>You can find the metadata schema for the synthSCAPE Onyx project here.</p>"},{"location":"gui/documentation/querying-data/#defining-the-query","title":"Defining the query","text":"<p>We are going to add filters on the <code>synthSCAPE</code> dataset to solve the following problem:</p> <p>Query</p> <p>Match all synthSCAPE records from 2025 that have a sequence purpose, a run ID of either <code>R-14EC71EBA7</code> or <code>R-F42A056185</code>, and contain at least 100 reads of <code>Influenza A Virus</code> (taxon ID <code>11320</code>).</p> <p>This query can be broken down into the following criteria:</p> <ol> <li>The <code>published_date</code> must be greater than or equal to <code>2025-01-01</code>.</li> <li>The <code>sequence_purpose</code> must not be blank.</li> <li>The <code>run_id</code> must be either <code>R-14EC71EBA7</code> or <code>R-F42A056185</code>.</li> <li>Each record's <code>classifier_calls</code> must contain at least one entry matching the condition:<ul> <li><code>(taxon_id == 11320) AND (count_descendants &gt;= 100)</code></li> </ul> </li> </ol>"},{"location":"gui/documentation/querying-data/#building-the-query","title":"Building the query","text":""},{"location":"gui/documentation/querying-data/#adding-a-filter","title":"Adding a Filter","text":"<p>To add a new filter, click the  icon on the <code>Filter</code> panel:</p> <p></p> <p>This creates an empty filter with the title <code>Click to Edit</code>.</p> <p></p> <p>Clicking on this filter will open its settings:</p> <p></p> <p>We will edit the filter as following:</p> <ul> <li>Set the field to <code>published_date</code>.</li> <li>Set the lookup to <code>gte</code> (greater than or equal).</li> <li>Set the value to <code>2025-01-01</code>.</li> </ul> <p></p> <p>Then hit <code>Apply</code> to filter to the dataset:</p> <p></p> <p>As we can see, the dataset has been filtered to return only records with a <code>published_date</code> greater than or equal to <code>2025-01-01</code>.</p> <p>Tip</p> <p>In this example, we have used the <code>gte</code> (greater than or equal) lookup for <code>published_date</code>. However, we could also use the <code>iso_year</code> lookup and set this to <code>2025</code> instead. </p>"},{"location":"gui/documentation/querying-data/#more-filters","title":"More Filters","text":"<p>To add the second filter, we create another filter with:</p> <ul> <li>Field: <code>sequence_purpose</code></li> <li>Lookup: <code>isnull</code></li> <li>Value: <code>false</code></li> </ul> <p>And to add the third filter, we create another filter with:</p> <ul> <li>Field: <code>run_id</code></li> <li>Lookup: <code>in</code></li> <li>Values: <code>R-14EC71EBA7</code>, <code>R-F42A056185</code></li> </ul> <p>The dataset has now been filtered further:</p> <p></p>"},{"location":"gui/documentation/querying-data/#nested-filters","title":"Nested Filters","text":"<p>To match the final requirement, we need to create two nested filters:</p> <p>Nested filter 1:</p> <ul> <li>Field: <code>classifier_calls__taxon_id</code></li> <li>Lookup: <code>exact</code></li> <li>Value: <code>11320</code></li> </ul> <p>Nested filter 2:</p> <ul> <li>Field: <code>classifier_calls__count_descendents</code></li> <li>Lookup: <code>gte</code></li> <li>Value: <code>100</code></li> </ul> <p>Each record in <code>synthSCAPE</code> contains multiple <code>classifier_calls</code> entries, that correspond to the taxa identified by Kraken2 within the sample. These <code>classifier_calls</code> entries also contain information such as the number of reads matched to each taxon, as well as the taxonomic rank.</p> <p>When we apply the first nested filter to this <code>classifier_calls</code> table, Onyx will return all records which have at least one <code>classifier_call</code> with <code>taxon_id == 11320</code>. </p> <p>When we apply both nested filters, Onyx will return all records which have at least one <code>classifier_calls</code> entry matching both <code>taxon_id == 11320</code> and <code>count_descendents &gt;= 100</code>. </p>"},{"location":"gui/documentation/querying-data/#query-results","title":"Query Results","text":"<p>As we can see, we have now filtered the dataset from the initial 8310 records down to just 388 records that match the target query.</p> <p>We can click on the first record, <code>C-DCF8C67DDF</code>, and navigate down to the <code>Classifier Calls</code> table and confirm over 100 reads matching <code>Influenza A Virus</code>:</p> <p></p>"},{"location":"gui/documentation/querying-data/#editing-columns","title":"Editing Columns","text":"<p>Going back to the results view, we may want to fix the columns that get returned from filtering. This will also speed up any later exports, as we are only exporting the columns that we need.</p> <p>We can open the columns editor by clicking the  <code>Edit Columns</code> button:</p> <p></p> <p>We will select the columns <code>climb_id</code>, <code>site</code>, <code>published_date</code>, <code>sequence_purpose</code> and <code>ingest_report</code>:</p> <p></p> <p>Then hit <code>Apply</code>, and only the columns we are interested in are returned:</p> <p></p>"},{"location":"gui/documentation/querying-data/#exporting-results","title":"Exporting Results","text":""},{"location":"gui/documentation/querying-data/#exporting-to-csvtsv","title":"Exporting to CSV/TSV","text":"<p>We have our filtered records and the columns we are interested in. Now, we want to export this data to a CSV or TSV within JupyterLab for continued analysis.</p> <p>Navigate down to the <code>Options</code> menu at the bottom-right of the results table, and select <code>Export to CSV/TSV</code>:</p> <p></p> <p>Here, we can see a default generated name for the file, and options to switch between CSV and TSV formats:</p> <p></p> <p>We will keep the default name and choose <code>.csv</code>.</p> <p>Clicking <code>Export</code> will then pull the requested data, and create a CSV file in JupyterLab:</p> <p></p>"},{"location":"gui/documentation/querying-data/#copying-to-the-onyx-cli","title":"Copying to the Onyx CLI","text":"<p>If we wish to transfer our filters to the Onyx command-line interface, we can click  <code>Copy CLI Command</code>:</p> <p></p> <p>Then paste this into a terminal:</p> <p></p> <p>Note</p> <p> <code>Copy CLI Command</code> only copies filters and summary fields; it does not transfer column and format settings.</p> <p>We can edit the fields/format with the <code>--include</code> and <code>--format</code> arguments, and filter the dataset:</p> <p></p>"},{"location":"gui/documentation/quick-start/","title":"Quick Start","text":""},{"location":"gui/documentation/quick-start/#launching-onyx","title":"Launching Onyx","text":"<p>To open a new instance of Onyx, open the JupyterLab launcher and click the  Onyx panel:</p> <p></p> <p>This will open Onyx:</p> <p></p> <p>Tip</p> <p>You can open multiple instances of Onyx, and these will be persisted within your current JupyterLab workspace. </p>"},{"location":"gui/documentation/quick-start/#navigating-the-header","title":"Navigating the Header","text":"<p>Looking at the header, from left to right we have the following options:</p> <ul> <li><code>Project: synthSCAPE</code><ul> <li>This dropdown shows the current active project. Click this to select a different project.</li> </ul> </li> <li><code>User: tobrier.synthscape</code><ul> <li>This shows the user you are authenticated as. Click this to view the profile page.</li> </ul> </li> <li><code>Site: synthscape-admins</code><ul> <li>This shows the site you are a member of. Click this to view the site page.</li> </ul> </li> <li><code>Version: 0.12.5</code><ul> <li>This shows the version of the JupyterLab extension that is currently running.</li> </ul> </li> <li><code>Records</code><ul> <li>Click this to view records for the current project.</li> </ul> </li> <li><code>Analyses</code><ul> <li>Click this to view analyses for the current project.</li> </ul> </li> <li><code>Graphs</code><ul> <li>Click this to view the graph dashboard for the current project.</li> </ul> </li> <li><ul> <li>Click this slider to switch between light and dark mode for Onyx.</li> </ul> </li> <li><ul> <li>Click this to view your most recently viewed records and analyses.</li> </ul> </li> </ul>"}]}